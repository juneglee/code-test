<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.keep.root.dao.ReviewDayDao">

  <resultMap type="ReviewDay" id="ReviewDayMap">
    <id column="review_day_no"  property="no"/>
    <result column="title"    property="title"/>
    <result column="day_date"    property="dayDate"/>
    <result column="day_review"    property="mainReview"/>
    <result column="main_photo"    property="mainPhoto"/>
    <result column="status"    property="status"/>
    
    <association property="review" javaType="Review">
      <id column="review_no"  property="no"/>
    </association>
    
    <collection property="reviewPlace" ofType="ReviewPlace">
      <id column="review_place_no"   property="no"/>
      <result column="place_name"    property="name"/>
	    <result column="place_basic_address"    property="basicAddr"/>
	    <result column="place_detail_address"    property="detailAddr"/>
	    <result column="place_review"    property="placeReview"/>
	    <result column="main_photo"    property="mainPhoto"/>
	    <result column="status"    property="status"/>
    </collection>
  </resultMap>
  
  <insert id="insert" parameterType="ReviewDay"
    useGeneratedKeys="true" keyColumn="review_day_no" keyProperty="no">
    insert into review_days(title,day_date,day_review,status,main_photo,review_no)
    values(#{title}, #{dayDate}, #{mainReview}, #{status}, #{mainPhoto}, #{review.no})
  </insert>
  
  <select id="findAllByReviewNo" resultMap="ReviewDayMap" parameterType="int">
    select 
      review_day_no,
      title,
      day_date,
      day_review,
      main_photo,
      status
    from review_days
    where
      review_no=#{no}
    order by
      review_day_no asc
  </select>

  
  <select id="findByNo" resultMap="ReviewDayMap" parameterType="int">
    select 
      d.review_day_no,
      d.title,
      d.day_date,
      d.day_review,
      d.main_photo,
      d.status,
      r.review_no,
      p.review_place_no
    from review_days d
      inner join reviews r on d.review_no=r.review_no
      left outer join review_place p on d.review_day_no=p.review_day_no
    where 
      d.review_day_no=#{no}
  </select>
  
  <select id="findAll" resultMap="ReviewDayMap" >
    select 
      d.review_day_no,
      d.title,
      d.day_date,
      d.day_review,
      d.main_photo,
      d.status,
      r.review_no,
      p.review_place_no,
      p.place_name,
      p.place_basic_address as basicAddr,
      p.place_detail_address as detailAddr,
      p.place_review,
      p.main_photo,
      p.status
    from review_days d
      inner join reviews r on d.review_no=r.review_no
      left outer join review_place p on d.review_day_no=p.review_day_no
    where 
      d.review_day_no
  </select>
  
    <select id="findByKeyword" resultMap="ReviewDayMap" parameterType="string">
    <bind name="keywordPattern" value="'%' + _parameter + '%'"/>
      select 
      d.review_day_no,
      d.title,
      d.day_date,
      d.day_review,
      d.main_photo,
      d.status,
      r.review_no,
      p.review_place_no,
      p.place_name,
      p.place_basic_address as basicAddr,
      p.place_detail_address as detailAddr,
      p.place_review,
      p.main_photo,
      p.status
    from review_days d
      inner join reviews r on d.review_no=r.review_no
      left outer join review_place p on d.review_day_no=p.review_day_no
    where 
      d.title like #{keywordPattern}
      or d.day_review like #{keywordPattern}
      or p.place_name like #{keywordPattern}
      or p.place_basic_address like #{keywordPattern}
      or p.place_detail_address like #{keywordPattern}
      or p.place_review like #{keywordPattern}
  </select>
  
  <!-- 
      select 
      d.review_day_no,
      d.title,
      d.day_date,
      d.day_review,
      d.main_photo,
      d.status,
      r.review_no,
      p.review_place_no,
      p.place_name,
      p.place_basic_address as basicAddr,
      p.place_detail_address  as detailAddr,
      p.place_review,
      p.main_photo,
      p.status
    from review_days d
      inner join reviews r on d.review_no=r.review_no
      left outer join review_place p on d.review_day_no=p.review_day_no
    where 
      d.title like "%홍대%"
      or d.day_review like "%홍대%"
      or p.place_name like "%홍대%"
      or p.place_basic_address like "%홍대%"
      or p.place_detail_address like  "%홍대%"
      or p.place_review like "%홍대%"
      
   -->
  
  
  
  <update id="update" parameterType="ReviewDay">
    update review_days
    <set>
      <if test="title != null and title != ''">title=#{title},</if> 
      <if test="dayDate != null and dayDate != ''">day_date=#{dayDate},</if>
    </set>
    where 
      review_day_no=#{no}
  </update>
  
  <delete id="delete" parameterType="int">
    delete from review_days
    where review_day_no=#{no}
  </delete>
  
</mapper>







